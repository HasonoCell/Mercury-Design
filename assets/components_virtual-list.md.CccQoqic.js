import{d as B}from"./chunks/debounce.DIqZWvJX.js";import{a as D}from"./chunks/isObject.D7bzW4Uf.js";import{d as b,p as k,h as a,c as p,o as d,k as y,j as o,N as E,F as x,B as S,t as T,ae as u,G as V}from"./chunks/framework.BCv1gK7J.js";var H="Expected a function";function q(h,i,t){var s=!0,e=!0;if(typeof h!="function")throw new TypeError(H);return D(t)&&(s="leading"in t?!!t.leading:s,e="trailing"in t?!!t.trailing:e),B(h,i,{leading:s,maxWait:i,trailing:e})}const I=b({name:"Mercury-FixedVList",__name:"FixedVList",props:{data:{},itemHeight:{default:50}},setup(h){const i=h,t=k(0),s=k(0),e=k(),F=a(()=>i.data.length*i.itemHeight),m=a(()=>e.value?e.value.offsetHeight:0),g=a(()=>Math.ceil(m.value/i.itemHeight)+1),v=a(()=>t.value+g.value),_=a(()=>{const r=Math.max(0,t.value-g.value),l=Math.min(v.value,i.data.length);return i.data.slice(r,l)}),f=a(()=>`transform:translateY(${s.value}px)`),C=a(()=>`height: ${F.value}px`),A=a(()=>`height: ${i.itemHeight}px; line-height: ${i.itemHeight}px`),c=q(r=>{const l=r.target;if(!l)return;const{scrollTop:n}=l;t.value=Math.floor(n/i.itemHeight),s.value=t.value*i.itemHeight},100);return(r,l)=>(d(),p("div",{class:"mr-virtual-list",ref_key:"listRef",ref:e,onScroll:l[0]||(l[0]=(...n)=>y(c)&&y(c)(...n))},[o("div",{class:"mr-virtual-list-filler",style:E(C.value)},null,4),o("div",{class:"mr-virtual-list-content",style:E(f.value)},[(d(!0),p(x,null,S(_.value,n=>(d(),p("div",{class:"mr-virtual-list-item",key:n,style:E(A.value)},T(n),5))),128))],4)],544))}}),L={style:{width:"100%",height:"500px"}},O=JSON.parse('{"title":"Virtual-List","description":"Virtual-List 组件文档","frontmatter":{"title":"Virtual-List","description":"Virtual-List 组件文档"},"headers":[],"relativePath":"components/virtual-list.md","filePath":"components/virtual-list.md"}'),P={name:"components/virtual-list.md"},w=Object.assign(P,{setup(h){const i=k(Array.from({length:1e4},(t,s)=>`当前显示数据 ${s+1}`));return(t,s)=>(d(),p("div",null,[s[0]||(s[0]=u('<h1 id="virtual-list-组件" tabindex="-1">Virtual-List 组件 <a class="header-anchor" href="#virtual-list-组件" aria-label="Permalink to &quot;Virtual-List 组件&quot;">​</a></h1><p>用于高效渲染超长定高列表的虚拟滚动组件，仅渲染可视区域附近的元素，显著提升大数据场景下的性能表现。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>通过 <code>data</code> 传递数据源，<code>item-height</code> 定义每项高度<code>（默认50px）</code>。 建议在外层添加一个父元素 <code>container</code> 用来控制列表的高度，作为子元素的列表会自动占满父元素。</p>',4)),o("div",L,[V(I,{data:i.value},null,8,["data"])]),s[1]||(s[1]=u(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">VirtualList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">listData</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ref } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> listData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Array.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ length: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`当前显示数据 \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>data</code></td><td><code>any[]</code></td><td>必填</td><td>需要渲染的数据源（响应式数据需使用ref）</td></tr><tr><td><code>itemHeight</code></td><td><code>number</code></td><td><code>50</code></td><td>列表项固定高度（必须保证所有子项高度一致）</td></tr></tbody></table><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>ref</code></td><td><code>HTMLDivElement</code></td><td>—</td><td>暴露虚拟列表容器的DOM引用</td></tr></tbody></table>`,4))]))}});export{O as __pageData,w as default};
