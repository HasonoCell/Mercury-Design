import{i as $,a as b,r as M}from"./chunks/isObject.D7bzW4Uf.js";import{d as O,p as _,h as o,c as C,o as x,k as V,j as D,N as T,F as R,B as W,t as j,ae as H,G as w}from"./chunks/framework.CtLS6b4e.js";var U=/\s/;function X(i){for(var t=i.length;t--&&U.test(i.charAt(t)););return t}var z=/^\s+/;function G(i){return i&&i.slice(0,X(i)+1).replace(z,"")}var L=NaN,J=/^[-+]0x[0-9a-f]+$/i,Y=/^0b[01]+$/i,K=/^0o[0-7]+$/i,Q=parseInt;function q(i){if(typeof i=="number")return i;if($(i))return L;if(b(i)){var t=typeof i.valueOf=="function"?i.valueOf():i;i=b(t)?t+"":t}if(typeof i!="string")return i===0?i:+i;i=G(i);var s=Y.test(i);return s||K.test(i)?Q(i.slice(2),s?2:8):J.test(i)?L:+i}var B=function(){return M.Date.now()},Z="Expected a function",ii=Math.max,ti=Math.min;function si(i,t,s){var a,l,u,k,n,d,E=0,y=!1,c=!1,f=!0;if(typeof i!="function")throw new TypeError(Z);t=q(t)||0,b(s)&&(y=!!s.leading,c="maxWait"in s,u=c?ii(q(s.maxWait)||0,t):u,f="trailing"in s?!!s.trailing:f);function F(e){var p=a,m=l;return a=l=void 0,E=e,k=i.apply(m,p),k}function v(e){return E=e,n=setTimeout(r,t),y?F(e):k}function g(e){var p=e-d,m=e-E,I=t-p;return c?ti(I,u-m):I}function h(e){var p=e-d,m=e-E;return d===void 0||p>=t||p<0||c&&m>=u}function r(){var e=B();if(h(e))return S(e);n=setTimeout(r,g(e))}function S(e){return n=void 0,f&&a?F(e):(a=l=void 0,k)}function N(){n!==void 0&&clearTimeout(n),E=0,a=d=l=n=void 0}function P(){return n===void 0?k:S(B())}function A(){var e=B(),p=h(e);if(a=arguments,l=this,d=e,p){if(n===void 0)return v(d);if(c)return clearTimeout(n),n=setTimeout(r,t),F(d)}return n===void 0&&(n=setTimeout(r,t)),k}return A.cancel=N,A.flush=P,A}var ai="Expected a function";function ei(i,t,s){var a=!0,l=!0;if(typeof i!="function")throw new TypeError(ai);return b(s)&&(a="leading"in s?!!s.leading:a,l="trailing"in s?!!s.trailing:l),si(i,t,{leading:a,maxWait:t,trailing:l})}const ni=O({__name:"Virtual-List",props:{data:{},itemHeight:{default:50}},setup(i){const t=i,s=_(0),a=_(0),l=_(),u=o(()=>t.data.length*t.itemHeight),k=o(()=>`transform:translateY(${a.value}px)`),n=o(()=>`height: ${u.value}px`),d=o(()=>`height: ${t.itemHeight}px; line-height: ${t.itemHeight}px`),E=o(()=>l.value?l.value.offsetHeight:0),y=o(()=>Math.ceil(E.value/t.itemHeight)+1),c=o(()=>s.value+y.value),f=o(()=>{const g=Math.max(0,s.value-y.value),h=Math.min(c.value,t.data.length);return t.data.slice(g,h)}),v=ei(g=>{const h=g.target;if(!h)return;const{scrollTop:r}=h;s.value=Math.floor(r/t.itemHeight),a.value=s.value*t.itemHeight},100);return(g,h)=>(x(),C("div",{class:"mr-virtual-list",ref_key:"listRef",ref:l,onScroll:h[0]||(h[0]=(...r)=>V(v)&&V(v)(...r))},[D("div",{class:"mr-virtual-list-filler",style:T(n.value)},null,4),D("div",{class:"mr-virtual-list-content",style:T(k.value)},[(x(!0),C(R,null,W(f.value,r=>(x(),C("div",{class:"mr-virtual-list-item",key:r,style:T(d.value)},j(r),5))),128))],4)],544))}}),li={style:{width:"100%",height:"500px"}},ki=JSON.parse('{"title":"Virtual-List","description":"Virtual-List 组件文档","frontmatter":{"title":"Virtual-List","description":"Virtual-List 组件文档"},"headers":[],"relativePath":"components/virtual-list.md","filePath":"components/virtual-list.md"}'),ri={name:"components/virtual-list.md"},pi=Object.assign(ri,{setup(i){const t=_(Array.from({length:1e4},(s,a)=>`当前显示数据 ${a+1}`));return(s,a)=>(x(),C("div",null,[a[0]||(a[0]=H('<h1 id="virtual-list-组件" tabindex="-1">Virtual-List 组件 <a class="header-anchor" href="#virtual-list-组件" aria-label="Permalink to &quot;Virtual-List 组件&quot;">​</a></h1><p>用于高效渲染超长定高列表的虚拟滚动组件，仅渲染可视区域附近的元素，显著提升大数据场景下的性能表现。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>通过 <code>data</code> 传递数据源，<code>item-height</code> 定义每项高度<code>（默认50px）</code>。 建议在外层添加一个父元素 <code>container</code> 用来控制列表的高度，作为子元素的列表会自动占满父元素。</p>',4)),D("div",li,[w(ni,{data:t.value},null,8,["data"])]),a[1]||(a[1]=H(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">VirtualList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">listData</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ref } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> listData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Array.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ length: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`当前显示数据 \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>data</code></td><td><code>any[]</code></td><td>必填</td><td>需要渲染的数据源（响应式数据需使用ref）</td></tr><tr><td><code>itemHeight</code></td><td><code>number</code></td><td><code>50</code></td><td>列表项固定高度（必须保证所有子项高度一致）</td></tr></tbody></table><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>ref</code></td><td><code>HTMLDivElement</code></td><td>—</td><td>暴露虚拟列表容器的DOM引用</td></tr></tbody></table>`,4))]))}});export{ki as __pageData,pi as default};
