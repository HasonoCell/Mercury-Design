import{d as z,ah as M,p as F,h as w,q as H,c as h,o as n,n as O,af as x,F as j,e as o,j as r,r as m,ai as L,K as S,k as $,b as C,Z as G,aj as J,P as K,G as e,ae as k,a as B,w as f}from"./chunks/framework.DA_k7y-Z.js";import{_ as u}from"./chunks/Icon.vue_vue_type_script_setup_true_lang.CH_6-u49.js";import"./chunks/theme.1z_b4HZN.js";import"./chunks/isObject.D7bzW4Uf.js";const Z={key:0,class:"mr-input__prepend"},Q={class:"mr-input__wrapper"},W={key:0,class:"mr-input__prefix"},X=["type","disabled","readonly","autocomplete","placeholder","autofocus","form"],Y={key:1,class:"mr-input__append"},ss=["disabled","readonly","autocomplete","placeholder","autofocus","form"],d=z({name:"Mercury Input",__name:"Input",props:{type:{default:"text"},size:{},modelValue:{default:""},clearable:{type:Boolean},showPassword:{type:Boolean},disabled:{type:Boolean},placeholder:{},readonly:{type:Boolean},autocomplete:{default:"off"},autofocus:{type:Boolean},form:{}},emits:["change","input","focus","blur","clear","update:modelValue"],setup(q,{expose:a,emit:s}){const t=q,p=s,V=M(),g=F(!1),E=F(!1),l=F(t.modelValue),c=F(),T=w(()=>t.clearable&&!t.disabled&&!!l.value&&g.value),b=w(()=>t.showPassword&&!t.disabled&&!!l.value),A=()=>{p("update:modelValue",l.value),p("input",l.value)},I=()=>{p("change",l.value)},_=i=>{g.value=!0,p("focus",i)},N=async()=>{var i;await K(),(i=c.value)==null||i.focus()},P=i=>{g.value=!0,p("blur",i)},U=()=>{l.value="",p("update:modelValue",""),p("clear"),p("input",""),p("change","")},D=()=>{E.value=!E.value},R=()=>{};return H(()=>t.modelValue,i=>{l.value=i}),a({ref:c.value}),(i,y)=>(n(),h("div",{class:O(["mr-input",{[`mr-input--${i.type}`]:i.type,[`mr-input--${i.size}`]:i.size,"is-disabled":i.disabled,"is-prepend":i.$slots.prepend,"is-append":i.$slots.append,"is-prefix":i.$slots.prefix,"is-suffix":i.$slots.suffix,"is-focus":g.value}])},[i.type!=="textarea"?(n(),h(j,{key:0},[i.$slots.prepend?(n(),h("div",Z,[m(i.$slots,"prepend")])):o("",!0),r("div",Q,[i.$slots.prefix?(n(),h("span",W,[m(i.$slots,"prefix")])):o("",!0),x(r("input",S({type:i.showPassword?E.value?"text":"password":i.type},$(V),{class:"mr-input__inner",disabled:i.disabled,readonly:i.readonly,autocomplete:i.autocomplete,placeholder:i.placeholder,autofocus:i.autofocus,form:i.form,"onUpdate:modelValue":y[0]||(y[0]=v=>l.value=v),onInput:A,onFocus:_,onBlur:P,onChange:I,ref_key:"inputRef",ref:c}),null,16,X),[[L,l.value]]),i.$slots.suffix||T.value||b.value?(n(),h("span",{key:1,class:"mr-input__suffix",onClick:N},[m(i.$slots,"suffix"),T.value?(n(),C(u,{key:0,icon:"circle-xmark",class:"mr-input__clear",onClick:U,onMousedown:G(R,["prevent"])})):o("",!0),b.value&&E.value?(n(),C(u,{key:1,icon:"eye",class:"mr-input__password",onClick:D})):o("",!0),b.value&&!E.value?(n(),C(u,{key:2,icon:"eye-slash",class:"mr-input__password",onClick:D})):o("",!0)])):o("",!0)]),i.$slots.append?(n(),h("div",Y,[m(i.$slots,"append")])):o("",!0)],64)):x((n(),h("textarea",S({key:1},$(V),{class:"mr-textarea__wrapper",disabled:i.disabled,readonly:i.readonly,autocomplete:i.autocomplete,placeholder:i.placeholder,autofocus:i.autofocus,form:i.form,"onUpdate:modelValue":y[1]||(y[1]=v=>l.value=v),onInput:A,onFocus:_,onBlur:P,onChange:I,ref_key:"inputRef",ref:c}),null,16,ss)),[[J,l.value]])],2))}}),ns=JSON.parse('{"title":"Input","description":"允许通过鼠标或键盘输入字符的组件","frontmatter":{"title":"Input","description":"允许通过鼠标或键盘输入字符的组件"},"headers":[],"relativePath":"components/input.md","filePath":"components/input.md"}'),is={name:"components/input.md"},ds=Object.assign(is,{setup(q){return(a,s)=>(n(),h("div",null,[s[12]||(s[12]=r("h2",{id:"基础文本框",tabindex:"-1"},[B("基础文本框 "),r("a",{class:"header-anchor",href:"#基础文本框","aria-label":'Permalink to "基础文本框"'},"​")],-1)),e(d,{modelValue:a.test,"onUpdate:modelValue":s[0]||(s[0]=t=>a.test=t),placeholder:"基础文本框，请输入"},null,8,["modelValue"]),s[13]||(s[13]=k(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ref } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Input </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/components/Input/Input.vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> placeholder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;基础文本框，请输入&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ test }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="禁用文本框" tabindex="-1">禁用文本框 <a class="header-anchor" href="#禁用文本框" aria-label="Permalink to &quot;禁用文本框&quot;">​</a></h2><p>通过 <code>disabled</code> 属性指定是否禁用 input 组件</p>`,3)),e(d,{modelValue:a.test,"onUpdate:modelValue":s[1]||(s[1]=t=>a.test=t),disabled:""},null,8,["modelValue"]),s[14]||(s[14]=k('<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> disabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h2 id="尺寸" tabindex="-1">尺寸 <a class="header-anchor" href="#尺寸" aria-label="Permalink to &quot;尺寸&quot;">​</a></h2><p>使用 <code>size</code> 属性改变输入框大小。除了默认大小外还有另外两个选项： <code>large / small</code>。</p>',3)),e(d,{modelValue:a.test,"onUpdate:modelValue":s[2]||(s[2]=t=>a.test=t),placeholder:"大的 Input",size:"large"},null,8,["modelValue"]),s[15]||(s[15]=r("div",{style:{display:"inline-flex",width:"20px"}},null,-1)),e(d,{modelValue:a.test,"onUpdate:modelValue":s[3]||(s[3]=t=>a.test=t),placeholder:"普通的 Input"},null,8,["modelValue"]),s[16]||(s[16]=r("div",{style:{display:"inline-flex",width:"20px"}},null,-1)),e(d,{modelValue:a.test,"onUpdate:modelValue":s[4]||(s[4]=t=>a.test=t),placeholder:"小的 Input",size:"small"},null,8,["modelValue"]),s[17]||(s[17]=k(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> placeholder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;大的 Input&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;large&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> placeholder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;普通的 Input&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> placeholder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;小的 Input&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;small&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h2 id="复合型输入框" tabindex="-1">复合型输入框 <a class="header-anchor" href="#复合型输入框" aria-label="Permalink to &quot;复合型输入框&quot;">​</a></h2><p>可以在输入框前置或后置一个元素，通常是标签或按钮。可以使用 <code>prepend</code> 和 <code>append</code> 插槽。 要在输入框中添加前后元素，可以使用 <code>prefix</code> 和 <code>suffix</code> 插槽。</p>`,3)),e(d,{modelValue:a.test,"onUpdate:modelValue":s[5]||(s[5]=t=>a.test=t),placeholder:"prepend append"},{prepend:f(()=>s[10]||(s[10]=[B("Https://")])),append:f(()=>s[11]||(s[11]=[B(".com")])),_:1},8,["modelValue"]),e(d,{modelValue:a.test,"onUpdate:modelValue":s[6]||(s[6]=t=>a.test=t),placeholder:"prefix suffix"},{prefix:f(()=>[e(u,{icon:"fa-user"})]),suffix:f(()=>[e(u,{icon:"fa-user"})]),_:1},8,["modelValue"]),s[18]||(s[18]=k(`<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> placeholder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prepend append&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;template #prepend&gt;Https://&lt;/template&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;template #append&gt;.com&lt;/template&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> placeholder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prefix suffix&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;template #prefix&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;Icon icon=&quot;fa-user&quot; /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/template&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;template #suffix&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;Icon icon=&quot;fa-user&quot; /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/template&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="文本域" tabindex="-1">文本域 <a class="header-anchor" href="#文本域" aria-label="Permalink to &quot;文本域&quot;">​</a></h2><p>用于输入多行文本信息可缩放的输入框。 添加 <code>type=&quot;textarea&quot;</code> 属性来将 input 元素转换为原生的 textarea 元素。</p>`,3)),e(d,{modelValue:a.test,"onUpdate:modelValue":s[7]||(s[7]=t=>a.test=t),placeholder:"可以是一个 Textarea",type:"textarea"},null,8,["modelValue"]),s[19]||(s[19]=k('<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> placeholder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;可以是一个 Textarea&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;textarea&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h2 id="密码文本框" tabindex="-1">密码文本框 <a class="header-anchor" href="#密码文本框" aria-label="Permalink to &quot;密码文本框&quot;">​</a></h2><p>使用 <code>show-password</code> 属性即可得到一个可切换显示隐藏的密码框。</p>',3)),e(d,{modelValue:a.test,"onUpdate:modelValue":s[8]||(s[8]=t=>a.test=t),placeholder:"密码文本框，可以切换",showPassword:""},null,8,["modelValue"]),s[20]||(s[20]=k('<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> placeholder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;密码文本框，可以切换&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> showPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h2 id="清空文本框" tabindex="-1">清空文本框 <a class="header-anchor" href="#清空文本框" aria-label="Permalink to &quot;清空文本框&quot;">​</a></h2><p>使用 <code>clearable</code> 属性即可得到一个可一键清空的输入框。</p>',3)),e(d,{modelValue:a.test,"onUpdate:modelValue":s[9]||(s[9]=t=>a.test=t),clearable:"",placeholder:"输入字符以后可以点击清空"},null,8,["modelValue"]),s[21]||(s[21]=k('<div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> clearable</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> placeholder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;输入字符以后可以点击清空&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>type</code></td><td>input 原生类型</td><td><code>string</code></td><td><code>&#39;text&#39;</code></td></tr><tr><td><code>model-value</code> / <code>v-model</code></td><td>绑定值</td><td><code>string</code></td><td>—</td></tr><tr><td><code>disabled</code></td><td>是否禁用</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>placeholder</code></td><td>输入框占位文本</td><td><code>string</code></td><td>—</td></tr><tr><td><code>size</code></td><td>输入框尺寸（仅在 <code>type</code> 不为 <code>&#39;textarea&#39;</code> 时有效）</td><td><code>&#39;large&#39;</code> | <code>&#39;small&#39;</code></td><td>—</td></tr><tr><td><code>show-password</code></td><td>是否显示切换密码图标</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>clearable</code></td><td>是否显示清除按钮</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>readonly</code></td><td>原生 <code>readonly</code> 属性（是否只读）</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>autofocus</code></td><td>原生属性，自动获取焦点</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td><code>autocomplete</code></td><td>原生 <code>autocomplete</code> 属性</td><td><code>string</code></td><td><code>&#39;off&#39;</code></td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><table tabindex="0"><thead><tr><th>事件名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>blur</code></td><td>输入框失去焦点时触发</td><td><code>(e: FocusEvent) =&gt; void</code></td></tr><tr><td><code>focus</code></td><td>输入框获得焦点时触发</td><td><code>(e: FocusEvent) =&gt; void</code></td></tr><tr><td><code>change</code></td><td>输入框失去焦点时触发（值变化）</td><td><code>(e: string) =&gt; void</code></td></tr><tr><td><code>input</code></td><td>输入框输入时触发</td><td><code>(e: string) =&gt; void</code></td></tr><tr><td><code>clear</code></td><td>点击清空按钮时触发</td><td><code>() =&gt; void</code></td></tr></tbody></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table tabindex="0"><thead><tr><th>插槽名</th><th>说明</th></tr></thead><tbody><tr><td><code>prefix</code></td><td>输入框头部内容</td></tr><tr><td><code>suffix</code></td><td>输入框尾部内容</td></tr><tr><td><code>prepend</code></td><td>输入框前置内容</td></tr><tr><td><code>append</code></td><td>输入框后置内容</td></tr></tbody></table><h3 id="exposes" tabindex="-1">Exposes <a class="header-anchor" href="#exposes" aria-label="Permalink to &quot;Exposes&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td><code>ref</code></td><td>HTML 元素（<code>input</code> 或 <code>textarea</code>）</td><td><code>Ref&lt;HTMLInputElement | HTMLTextAreaElement&gt;</code></td></tr></tbody></table>',10))]))}});export{ns as __pageData,ds as default};
